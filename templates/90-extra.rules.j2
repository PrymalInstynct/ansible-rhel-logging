{{ ansible_managed | comment }}
#############
# Extra Rules
#############

## https://slack.engineering/syscall-auditing-at-scale-e6a3ca8ac1b8
## https://stackoverflow.com/questions/27014955/socket-connect-vs-bind
## https://www.redhat.com/archives/linux-audit/2015-January/msg00057.html

###############################################
# Log all commands executed by nobody/webserver
###############################################
{% if ansible_os_family == 'RedHat' %}
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -F euid=99 -S execve -k nobodycmd
{% endif %}
-a exit,always -F arch=b32 -F euid=99 -S execve -k nobodycmd
{% else %}
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -F euid=65534 -S execve -k nobodycmd
{% endif %}
-a exit,always -F arch=b32 -F euid=65534 -S execve -k nobodycmd
{% endif %}

########
# Listen
########
-a exit,always -F arch=b32 -S listen -k listen_call
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S listen -k listen_call
{% endif %}

#########################
# Suspicious x86 Syscalls
#########################
{% if ansible_architecture != "armv7l" %}
-a exit,always -F arch=b32 -S ioperm -S modify_ldt -k suspicious_syscalls
{% else %}
-a exit,always -F arch=b32 -S ioperm -k suspicious_syscalls
{% endif %}
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S ioperm -S modify_ldt -k suspicious_syscalls
{% endif %}

#################################
# Uncommon and Dangerous Syscalls
#################################
{% if ansible_architecture != "armv7l" %}
-a exit,always -F arch=b32 -S get_kernel_syms -S ptrace -k uncommon_syscalls
{% else %}
-a exit,always -F arch=b32 -S ptrace -k uncommon_syscalls
{% endif %}
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S get_kernel_syms -S ptrace -k uncommon_syscalls
{% endif %}
-a exit,always -F arch=b32 -S prctl -k uncommon_syscalls
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S prctl -k uncommon_syscalls
{% endif %}

###################################################
# Monitor administrator access to /home directories
###################################################
-a always,exit -F dir=/home/ -F uid=0 -C auid!=obj_uid -k admin_user_home

{% if auditd_log_all_execve %}
###########################
# Log all executed commands
###########################
-a exit,always -F arch=b32 -S execve -k execve_call
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S execve -k execve_call
{% endif %}
{% endif %}

{% if auditd_sensitive_binary_exec %}
####################################
# Log all specific Binary Executions
####################################
{% for file in auditd_sensitive_binary_exec %}
-w {{ file }} -p x -k binaries_exec
{% endfor %}
{% endif %}

{% if auditd_log_etc %}
########################################
# Log changes and executions within /etc
########################################
-w /etc/ -p wa -k etc_write
-w /etc/ -p x -k etc_exec
{% endif %}

{% if auditd_log_tmp %}
########################################
# Log changes and executions within /tmp
########################################
-w /tmp/ -p wa -k tmp_write
-w /tmp/ -p x -k tmp_exec
{% endif %}

{% if auditd_log_all_connect %}
#############################################################################
# Log all connect (should include socket()) = 'Syscall name unknown: connect'
#############################################################################
-a exit,always -F arch=b32 -S connect -k connect_call
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S connect -k connect_call
{% endif %}
{% endif %}

{% if auditd_log_all_socket %}
######################################
# Log sockets, only the one succeeding
######################################
-a exit,always -F arch=b32 -F success=1 -S socket -k socket_call
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -F success=1 -S socket -k socket_call
{% endif %}

############################################
# socket(PF_INET, SOCK_STREAM, x) (ipv4/tcp)
############################################
-a exit,always -F arch=b32 -F a0=2 -F a1=1 -S socket -k socket_call_ipv4_tcp
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -F a0=2 -F a1=1 -S socket -k socket_call_ipv4_tcp
{% endif %}

###########################################
# socket(PF_INET, SOCK_DGRAM, x) (ipv4/udp)
###########################################
-a exit,always -F arch=b32 -F a0=2 -F a1=2 -S socket -k socket_call_ipv4_udp
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -F a0=2 -F a1=2 -S socket -k socket_call_ipv4_udp
{% endif %}

#############################################
# socket(PF_INET6, SOCK_STREAM, x) (ipv6/tcp)
#############################################
-a exit,always -F arch=b32 -F a0=10 -F a1=1 -S socket -k socket_call_ipv6_tcp
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -F a0=10 -F a1=1 -S socket -k socket_call_ipv6_tcp
{% endif %}

############################################
# socket(PF_INET6, SOCK_DGRAM, x) (ipv6/udp)
############################################
-a exit,always -F arch=b32 -F a0=10 -F a1=2 -S socket -k socket_call_ipv6_udp
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -F a0=10 -F a1=2 -S socket -k socket_call_ipv6_udp
{% endif %}
{% endif %}

#################################
# Audit access to sensitive files
#################################
{% for f in auditd_sensitive_files %}
-w {{ f }} -p rwxa -k sensitive_file
{% endfor %}

#####################
# Audit sigkill usage
#####################
# http://unixadminschool.com/blog/2014/06/linux-admin-reference-configuring-auditd-in-redhat-enterprise-linux/
-a exit,always -F arch=b32 -S kill -k sigkill
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S kill -k sigkill
{% endif %}
-a exit,always -F arch=b32 -S tkill -k sigkill
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S tkill -k sigkill
{% endif %}
-a exit,always -F arch=b32 -S tgkill -k sigkill
{% if ansible_userspace_bits == '64' %}
-a exit,always -F arch=b64 -S tgkill -k sigkill
{% endif %}

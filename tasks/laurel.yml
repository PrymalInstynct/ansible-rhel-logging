---
- name: Identify Laurel Latest Version # noqa: command-instead-of-module yaml[line-length]
  ansible.builtin.shell:
    cmd: |
      set -o pipefail

      curl --silent "https://api.github.com/repos/threathunters-io/laurel/releases/latest" | jq -r '.assets[].browser_download_url' | grep -E "{{ auditd_laurel_architecture }}-glibc.tar.gz$" | head -1
  args:
    executable: /bin/bash
  changed_when: false
  register: laurel_latest

- name: Create temporary install directory
  ansible.builtin.file:
    path: /tmp/laurel
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create laurel system account
  ansible.builtin.user:
    name: '{{ auditd_laurel_user }}'
    comment: 'Laurel Auditing'
    home: /var/log/laurel
    create_home: true
    system: true
    state: present

- name: "Download and unarchive Laurel"
  ansible.builtin.unarchive:
    src: '{{ laurel_latest.stdout }}'
    dest: /tmp/laurel
    remote_src: true

- name: Copy laurel binary to /usr/local/sbin/
  ansible.builtin.copy:
    src: /tmp/laurel/laurel
    dest: /usr/local/sbin/
    remote_src: true
    mode: '0755'
    owner: root
    group: root
  register: laurel_installed

- name: Create laurel configuration directory
  ansible.builtin.file:
    path: /etc/laurel
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Install laurel configuration
  ansible.builtin.template:
    src: '{{ auditd_laurel_config }}'
    dest: /etc/laurel/config.toml
    mode: '0644'
    owner: root
    group: root

- name: Enable laurel via Audispd
  ansible.builtin.template:
    src: '{{ auditd_laurel_plugin }}'
    dest: "{{ auditd_plugins_dir }}"
    mode: '0640'
    owner: root
    group: root

- name: SELinux Configuration
  when: ansible_selinux.status == 'enabled'
  block:
    - name: Copy laurel selinux policy
      ansible.builtin.copy:
        src: laurel.pp
        dest: /tmp/
        mode: '0644'
        owner: root
        group: root

    - name: Install laurel selinux policy
      ansible.builtin.command: semodule -i /tmp/laurel.pp
      register: selinux
      failed_when: selinux.rc != 0
      changed_when: false

    - name: Set laurel selinux context
      ansible.builtin.command: restorecon -v -R -F /usr/local/sbin/laurel /etc/laurel /var/log/laurel
      register: restorecon
      failed_when: restorecon.rc != 0
      changed_when: false

- name: Add logrotate configuration for laurel log
  ansible.builtin.template:
    src: logrotate-laurel.j2
    dest: /etc/logrotate.d/laurel
    mode: '0644'
    validate: 'logrotate -dv %s'

- name: Delete temporary install directory
  ansible.builtin.file:
    path: /tmp/laurel
    state: absent
